kind: Endpoints
apiVersion: v1
metadata:
  name: go-rest-wol
  namespace: default
subsets:
  - addresses:
      - ip: 1.2.3.4  # IP of the server hosting the WOL container
    ports:
      - port: 8080
        protocol: TCP
        name: http
---
kind: Service
apiVersion: v1
metadata:
  name: go-rest-wol
  namespace: default
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
      name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-rest-wol-in
  namespace: default
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web  # <namespace>-<middleware>@kubernetescrd
    traefik.ingress.kubernetes.io/router.middlewares: default-lan-whitelist@kubernetescrd
spec:
  rules:
    - host: wol.local.dudoleitor.com
      http:
        paths:
          - backend:
              service:
                name: go-rest-wol
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-rest-wol-ext
  namespace: default
  annotations:
    # This configuration will reject http requests, the redirect ingress below is needed to handle those
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: default-hstsxssext@kubernetescrd,default-robotsext@kubernetescrd,kube-system-autheliaext@kubernetescrd
    kubernetes.io/ingress.class: traefik-external
  labels:
    traffic-type: external
spec:
  rules:
  - host: wol.carl-otto.it  # Add DNS entry for this domain to the ingress IP (primary or secondary)
    http:
      paths:
      - backend:
          service:
            name: go-rest-wol
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - secretName: carlotto-wildcard  # Be sure that cert-manager has been configured
    hosts:
    - wol.carl-otto.it
