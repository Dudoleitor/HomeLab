apiVersion: apps/v1
kind: Deployment
metadata:
  name: authelia
  namespace: authelia
spec:
  replicas: 2
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  revisionHistoryLimit: 0  # Cleaning up all old replicasets
  selector: 
    matchLabels: 
     app: authelia
  template:
    metadata:
      labels:
        app: authelia
    spec:
      priorityClassName: higher-priority-2000
      containers:
        - image: authelia/authelia:4.38.17
          imagePullPolicy: IfNotPresent
          name: authelia
          ports:
            - containerPort: 9091
              name: authelia
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/ssl/certs/ca-certificates.crt
              name: certs-store
              subPath: ca-certificates.crt
              readOnly: true
            - mountPath: /dev/dev-urandom
              name: dev-urandom
              readOnly: true
            - mountPath: /config/configuration.yml
              name: config
              subPath: configuration.yml
            - mountPath: /config/users_database.yml
              name: config
              subPath: users_database.yml
          env:
          - name: TZ
            value: 'Europe/Rome'
          - name: AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: jwt-session
                key: jwt
          - name: AUTHELIA_SESSION_SECRET
            valueFrom:
              secretKeyRef:
                name: jwt-session
                key: session
          - name: AUTHELIA_STORAGE_ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: storage
                key: encryption-key
          - name: AUTHELIA_STORAGE_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: storage
                key: mysql-pass
          - name: AUTHELIA_NOTIFIER_SMTP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: smtp
                key: pass
          - name: AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET
            valueFrom:
              secretKeyRef:
                name: oidc
                key: hmac
          resources:  # Limiting resources is always better, adjust accordingly
            limits:
              cpu: 250m
              memory: 200Mi
            requests:
              cpu: 125m
              memory: 64Mi
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsUser: 909
            runAsGroup: 909
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              port: authelia
              path: /
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              port: authelia
              path: /
            initialDelaySeconds: 10
            periodSeconds: 20
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 909
        runAsUser: 909
        runAsGroup: 909
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - name: certs-store
          hostPath:
            path: /etc/ssl/certs
        - name: dev-urandom
          hostPath:
            path: /dev/urandom
        - name: config
          configMap:
            name: authelia-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: authelia-config
  namespace: authelia
data:
  configuration.yml: |
    ---
    ###############################################################
    #                   Authelia configuration                    #
    ###############################################################
    theme: 'dark'
    server:
      address: 'tcp://:9091'
      disable_healthcheck: true
      endpoints:
        authz:
          forward-auth:
            implementation: 'ForwardAuth'

    log:
      level: 'info'

    totp:
      issuer: 'carl-otto.it'

    authentication_backend:
      password_reset:
        disable: true
      file:
        path: '/config/users_database.yml'
        search:
          email: true
          case_insensitive: true
        password:
          algorithm: 'sha2crypt'

    access_control:
      default_policy: 'deny'
      rules:
        - domain: 'guac.carl-otto.it'
          policy: 'one_factor'
        - domain: 'domain1.carl-otto.it'
          policy: 'one_factor'
        - domain_regex: '^(kube|ext)-traefik-dash\.local\.dudoleitor.com$'
          policy: 'one_factor'
          subject: 'group:dev'
        - domain: 'longhorn.local.dudoleitor.com'
          policy: 'two_factor'
          subject: 'group:dev'

    session:
      expiration: '1 day'
      remember_me: '3 month'
      inactivity: '10 minutes'
      cookies:
        - name: 'authelia_session'
          domain: 'carl-otto.it'
          authelia_url: 'https://auth.carl-otto.it'
          expiration: '1 day'
          remember_me: '3 month'
          inactivity: '10 minutes'
        - name: 'authelia_session'
          domain: 'dudoleitor.com'
          authelia_url: 'https://auth.dudoleitor.com'
          expiration: '1 day'
          remember_me: '3 month'
          inactivity: '10 minutes'

      redis:
        host: 'redis-cache.default.svc.cluster.local'
        port: 6379
        database_index: 1

    regulation:
      max_retries: 3
      find_time: '2 minutes'
      ban_time: '5 minutes'

    storage:
      mysql:
        address: 'tcp://1.2.3.4:3305'
        database: 'authelia'
        username: 'authelia'

    notifier:
      smtp:
        username: 'authelia'
        address: 'smtp://relay-smtp.dudoleitor.com:587'
        sender: 'noreply@dudoleitor.com'
    identity_providers:
      oidc:
        jwks:
          - algorithm: 'RS256'
            key: |
              -----BEGIN PRIVATE KEY-----
              -----END PRIVATE KEY-----
            certificate_chain: |
              -----BEGIN CERTIFICATE-----
              -----END CERTIFICATE-----
        enable_client_debug_messages: false
        minimum_parameter_entropy: 8
        enforce_pkce: 'public_clients_only'
        enable_pkce_plain_challenge: false
        enable_jwt_access_token_stateless_introspection: false
        discovery_signed_response_alg: 'none'
        discovery_signed_response_key_id: ''
        require_pushed_authorization_requests: false
        # authorization_policies:
        #   policy_name:
        #     default_policy: 'two_factor'
        #     rules:
        #       - policy: 'deny'
        #         subject: 'group:services'
        lifespans:
          access_token: '1h'
          authorize_code: '1m'
          id_token: '1h'
          refresh_token: '90m'
        cors:
          endpoints:
            - 'authorization'
            - 'token'
            - 'revocation'
            - 'introspection'
          allowed_origins:
            - 'https://carl-otto.it'
          allowed_origins_from_client_redirect_uris: false
        clients:
          - client_id: ''
            client_name: 'NextCloud'
            client_secret: ''
            public: false
            authorization_policy: 'two_factor'
            require_pkce: true
            pkce_challenge_method: 'S256'
            redirect_uris:
              - 'https://cloud.carl-otto.it/apps/oidc_login/oidc'
            scopes:
              - 'openid'
              - 'profile'
              - 'email'
              - 'groups'
            userinfo_signed_response_alg: 'none'
            token_endpoint_auth_method: 'client_secret_basic'
          - client_id: ''
            client_name: 'Apache Guacamole'
            client_secret: ''
            public: false
            authorization_policy: 'one_factor'
            redirect_uris:
              - 'https://guac.carl-otto.it'
            scopes:
              - 'openid'
              - 'profile'
              - 'groups'
              - 'email'
            response_types:
              - 'id_token'
            grant_types:
              - 'implicit'
            userinfo_signed_response_alg: 'none'
    ...
  users_database.yml: |
    ---
    ###############################################################
    #                         Users Database                      #
    ###############################################################

    # This file can be used if you do not have an LDAP set up.

    # List of users
    users:
      admin:
        disabled: false
        displayname: "Admin"
        password: ""
        email: root@carl-otto.it
        groups:
          - admin
          - dev
      dudoleitor:
        disabled: false
        displayname: "Edoardo Carlotto"
        password: ""
        email: edoardo@carl-otto.it
        groups:
          - dev
    ...
---
apiVersion: v1
kind: Service
metadata:
  name: authelia-svc
  namespace: authelia
spec:
  selector:
    app: authelia
  ports:
    - protocol: TCP
      port: 80
      targetPort: authelia
  type: ClusterIP

# There will be two different ingresses to handle requests coming to the internal traefik ingress and to th
# external traefik ingress.
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # This configuration will reject http requests, the redirect ingress below is needed to handle those
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: default-hstsxssin@kubernetescrd,default-robotsin@kubernetescrd
  name: authelia-in
  namespace: authelia
spec:
  rules:
  - host: auth.carl-otto.it  # Add DNS entry for this domain to the ingress IP (primary or secondary)
    http:
      paths:
      - backend:
          service:
            name: authelia-svc
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  - host: auth.dudoleitor.com  # Add DNS entry for this domain to the ingress IP (primary or secondary)
    http:
      paths:
      - backend:
          service:
            name: authelia-svc
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - secretName: carlotto-authelia  # Be sure that cert-manager has been configured
    hosts:
    - auth.carl-otto.it
  - secretName: dudoleitor-authelia  # Be sure that cert-manager has been configured
    hosts:
    - auth.dudoleitor.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # This configuration will reject http requests, the redirect ingress below is needed to handle those
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: default-hstsxssext@kubernetescrd,default-robotsext@kubernetescrd
    kubernetes.io/ingress.class: traefik-external
  labels:
    traffic-type: external
  name: authelia-ext
  namespace: authelia
spec:
  rules:
  - host: auth.carl-otto.it  # Add DNS entry for this domain to the ingress IP (primary or secondary)
    http:
      paths:
      - backend:
          service:
            name: authelia-svc
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  - host: auth.dudoleitor.com  # Add DNS entry for this domain to the ingress IP (primary or secondary)
    http:
      paths:
      - backend:
          service:
            name: authelia-svc
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - secretName: dudoleitor-authelia  # Be sure that cert-manager has been configured
    hosts:
    - 'auth.dudoleitor.com'
  - secretName: carlotto-authelia  # Be sure that cert-manager has been configured
    hosts:
    - 'auth.carl-otto.it'
---
# This secondary ingress is needed to properly redirect http requests to https
# The middleware 'redirect' needs to be deployed in the namespace 'default', check traefik-midd-httpred.yml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-in-redirect
  namespace: authelia
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web  # <namespace>-<middleware>@kubernetescrd
    traefik.ingress.kubernetes.io/router.middlewares: default-redirect@kubernetescrd
spec:
  rules:
    - host: auth.carl-otto.it
      http:
        paths:
          - backend:
              service:
                name: authelia-svc
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
    - host: auth.dudoleitor.com
      http:
        paths:
          - backend:
              service:
                name: authelia-svc
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
